{"version":3,"sources":["components/Node.js","components/Gallery.js","App.js","reportWebVitals.js","index.js"],"names":["Node","props","useState","click","setClick","type","label","currNodeLabel","currNodeChildren","setCurrNodeChildren","setRequestError","baseUrl","receiptUrl","getData","useCallback","a","axios","get","json","headers","result","console","log","resultData","data","message","window","alert","className","onClick","children","map","nodeChild","toString","Gallery","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAKaA,G,MAAO,SAAPA,EAAQC,GAAW,IAAD,EACHC,oBAAS,GADN,mBACtBC,EADsB,KACfC,EADe,OAEWF,mBAASD,EAAMI,MAF1B,gCAGaH,mBAASD,EAAMK,QAH5B,mBAGtBC,EAHsB,aAImBL,mBAAS,KAJ5B,mBAItBM,EAJsB,KAIJC,EAJI,OAKWP,qBALX,mBAKRQ,GALQ,WAOvBC,EAAU,mDACVC,EAAaX,EAAMK,MAAQK,EAAU,IAAMV,EAAMK,MAAQK,EAGzDE,EAAUC,sBAAW,sBAAC,8BAAAC,EAAA,+EAEHC,IAAMC,IAAN,UAAaL,GAAc,CAC9CM,MAAM,EACNC,QAAS,CAAE,UANG,sCAEQ,OAElBC,EAFkB,OAMxBC,QAAQC,IAAI,cAENC,EAAaH,EAAOI,KAAKA,KAC/Bf,EAAoBc,GACpBnB,GAAS,GACTiB,QAAQC,IAAI,cAAeC,GAXH,kDAaxBb,EAAgB,KAAIe,SACpBC,OAAOC,MAAM,KAAIF,SAdO,2DAkB5B,OACE,qCACE,wBACEG,UACiB,IAAf3B,EAAMI,KAAcF,EAAQ,iBAAmB,SAAY,UAE7D0B,QAAShB,IAGVV,GACC,oBAAIyB,UAAU,QAAd,SACGpB,EAAiBsB,UAChBtB,EAAiBsB,SAASC,KAAI,SAACC,GAAD,OAC5B,cAAChC,EAAD,CAEEM,MAAOC,EAAgB,IAAMyB,EAAU1B,MAAM2B,WAC7C5B,KAAM2B,EAAU3B,MAFX2B,EAAU1B,iBC7ClB4B,G,MAAU,SAACjC,GACtB,OACE,mCACE,qBACE2B,UAAW3B,EAAMI,KACjBwB,QAAS,WACY,IAAf5B,EAAMI,MACNJ,EAAMI,YCQL8B,MAXf,WACE,OACE,sBAAKP,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,SACE,cAAC,EAAD,CAAMtB,MAAO,OAAQD,KAAM,WAE7B,cAAC,EAAD,QCDS+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.af9be5bd.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Node.css\";\r\n\r\nexport const Node = (props) => {\r\n  const [click, setClick] = useState(false);\r\n  const [currNodeType, setCurrNodeType] = useState(props.type);\r\n  const [currNodeLabel, setCurrNodeLabel] = useState(props.label);\r\n  const [currNodeChildren, setCurrNodeChildren] = useState([]);\r\n  const [requestError, setRequestError] = useState();\r\n\r\n  const baseUrl = \"http://18.203.83.17/public/explorePictures?path=\";\r\n  const receiptUrl = props.label ? baseUrl + \"/\" + props.label : baseUrl;\r\n  const clientToken = \"2d4e69f4823176197ccf41caa5ee6456\";\r\n\r\n  const getData = useCallback(async () => {\r\n    try {\r\n      const result = await axios.get(`${receiptUrl}`, {\r\n        json: true,\r\n        headers: { \"X-TOKEN\": clientToken },\r\n      });\r\n      console.log(\"inside try\");\r\n\r\n      const resultData = result.data.data;\r\n      setCurrNodeChildren(resultData);\r\n      setClick(true);\r\n      console.log(\"inside try=\", resultData);\r\n    } catch (err) {\r\n      setRequestError(err.message);\r\n      window.alert(err.message);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={\r\n          props.type === 0 ? (click ? \"clicked-folder\" : \"folder\") : \"picture\"\r\n        }\r\n        onClick={getData}\r\n      >\r\n      </button>\r\n      {click && (\r\n        <ul className=\"nodes\">\r\n          {currNodeChildren.children &&\r\n            currNodeChildren.children.map((nodeChild) => (\r\n              <Node\r\n                key={nodeChild.label}\r\n                label={currNodeLabel + \"/\" + nodeChild.label.toString()}\r\n                type={nodeChild.type}\r\n              ></Node>\r\n            ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./Gallery.css\";\r\n\r\nexport const Gallery = (props) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className={props.type}\r\n        onClick={() => {\r\n          if (props.type === 0) return;\r\n          if (props.type === 1) return;\r\n        }}\r\n      ></div>\r\n    </>\r\n  );\r\n};\r\n","import \"./App.css\";\n\nimport axios from \"axios\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Node } from \"./components/Node\";\nimport { Gallery } from \"./components/Gallery\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ul className=\"nodes\">\n        <Node label={\"root\"} type={\"root\"}></Node>\n      </ul>\n      <Gallery></Gallery>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}